{"version":3,"sources":["Routes.jsx","NavigationBar.jsx","App.jsx","theme.js","reportWebVitals.js","index.js"],"names":["Routes","path","sidebarName","component","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","drawer","width","fullList","withRouter","props","classes","useState","isOpen","setIsOpen","toggleDrawer","open","event","type","key","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Drawer","paper","onClose","role","onKeyDown","MenuList","map","prop","to","style","textDecoration","MenuItem","selected","routeName","location","pathname","ListItemText","primary","App","route","exact","createMuiTheme","palette","main","secondary","error","red","A400","background","default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"iLAsCeA,EAlBA,CACb,CACEC,KAAM,IACNC,YAAa,OACbC,UAtBS,WACX,OACE,wCAsBF,CACEF,KAAM,UACNC,YAAa,SACbC,UArBW,WACb,OACE,2CAqBF,CACEF,KAAM,UACNC,YAAa,SACbC,UApBW,WACb,OACE,4C,kHCAEC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,OAAQ,CACNC,MAAO,KAETC,SAAU,CACRD,MAAO,aA8DEE,eAzDO,SAACC,GACrB,IAAMC,EAAUf,IADe,EAEHgB,oBAAS,GAFN,mBAExBC,EAFwB,KAEhBC,EAFgB,KAGzBC,EAAe,SAAAC,GAAI,OAAI,SAAAC,IAEV,YAAfA,EAAMC,MACS,QAAdD,EAAME,KACS,UAAdF,EAAME,MAKVL,EAAUE,KAOZ,OACE,gCACE,qBAAKI,UAAWT,EAAQX,KAAxB,SACE,cAACqB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWT,EAAQT,WAAYwB,MAAM,UAAUC,aAAW,OAAOC,QAASb,GAAa,GAAhH,SACE,cAAC,IAAD,MAEF,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWT,EAAQN,MAA5C,gCAMN,cAAC0B,EAAA,EAAD,CAAQpB,QAAS,CAAEqB,MAAOrB,EAAQL,QAAUU,KAAMH,EAAQoB,QAASlB,GAAa,GAAhF,SACE,qBACEK,UAAWT,EAAQH,SACnB0B,KAAK,eACLN,QAASb,GAAa,GACtBoB,UAAWpB,GAAa,GAJ1B,SAME,cAACqB,EAAA,EAAD,UACG5C,EAAO6C,KAAI,SAACC,EAAMnB,GACjB,OACE,cAAC,IAAD,CAASoB,GAAID,EAAK7C,KAAM+C,MAAO,CAAEC,eAAgB,QAAjD,SACE,cAACC,EAAA,EAAD,CAAUC,UA7BLC,EA6B2BN,EAAK7C,KA5B5CiB,EAAMmC,SAASC,WAAaF,GA4BrB,SACE,cAACG,EAAA,EAAD,CAAcC,QAASV,EAAK5C,iBAFgCyB,GA5B1D,IAACyB,iBC7BRK,EAfH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,UACGzD,EAAO6C,KAAI,SAACa,GAAD,OACV,cAAC,IAAD,CAAOC,OAAK,EAAC1D,KAAMyD,EAAMzD,KAAzB,SACE,cAACyD,EAAMvD,UAAP,KADkCuD,EAAMzD,e,gBCQrCK,EAjBDsD,YAAe,CAC3BC,QAAS,CACPL,QAAS,CACPM,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCJAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCgBdQ,IAASC,OACP,cAAC,IAAD,UACE,eAACC,EAAA,EAAD,CAAe1E,MAAOA,EAAtB,UAEE,cAAC2E,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.1d410029.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <h1>Home</h1>\r\n  );\r\n};\r\n\r\nconst Store1 = () => {\r\n  return (\r\n    <h1>Store 1</h1>\r\n  );\r\n};\r\n\r\nconst Store2 = () => {\r\n  return (\r\n    <h1>Store 2</h1>\r\n  );\r\n};\r\n\r\nconst Routes = [\r\n  {\r\n    path: '/',\r\n    sidebarName: 'Home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/store1',\r\n    sidebarName: 'Store1',\r\n    component: Store1\r\n  },\r\n  {\r\n    path: '/store2',\r\n    sidebarName: 'Store2',\r\n    component: Store2\r\n  },\r\n];\r\n\r\nexport default Routes;","import React, { useState } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Drawer,\r\n  MenuList,\r\n  MenuItem,\r\n  ListItemText,\r\n } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer: {\r\n      width: 300,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  }),\r\n);\r\n\r\nconst NavigationBar = (props) => {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' ||\r\n        event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setIsOpen(open);\r\n  };\r\n\r\n  const activeRoute = (routeName) => {\r\n    return props.location.pathname === routeName ? true : false;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Hello World\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Drawer classes={{ paper: classes.drawer }} open={isOpen} onClose={toggleDrawer(false)}>\r\n        <div\r\n          className={classes.fullList}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(false)}\r\n          onKeyDown={toggleDrawer(false)}\r\n        >\r\n          <MenuList>\r\n            {Routes.map((prop, key) => {\r\n              return (\r\n                <NavLink to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                  <MenuItem selected={activeRoute(prop.path)}>\r\n                    <ListItemText primary={prop.sidebarName} />\r\n                  </MenuItem>\r\n                </NavLink>\r\n              );\r\n            })}\r\n          </MenuList>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavigationBar);","import React from 'react';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nimport NavigationBar from './NavigationBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <NavigationBar />\r\n      <Switch>\r\n        {Routes.map((route) => (\r\n          <Route exact path={route.path} key={route.path}>\r\n            <route.component />\r\n          </Route>\r\n        ))}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { Router, Route, browserHistory } from 'react-router-dom'\n// import { createBrowserHistory } from 'history';\n// import { ConnectedRouter, routerMiddleware } from 'react-router-redux';\n// import { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import { applyMiddleware, createStore } from 'redux';\n\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\n// import { rootReducer } from './rootReducer';\n\n// const initialState = {};\n// const store = createStore(\n//   rootReducer,\n//   initialState\n// );\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}